{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","react_default","a","createElement","src","alt","MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","assertThisInitialized","handleSubmit","_this2","fetch","then","response","json","memes","data","setState","event","_event$target","target","name","value","defineProperty","preventDefault","randomNum","Math","floor","random","length","randomMemeImg","url","className","onSubmit","type","placeholder","onChange","bottomtext","Component","App","src_Header","src_MemeGenerator","ReactDOM","render","src_App","document","getElementById"],"mappings":"wKAaeA,MAXf,WACI,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,IAAI,iEACLC,IAAI,cAERJ,EAAAC,EAAAC,cAAA,8ECiEGG,cArEX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,YAAa,IAEjBX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IATVA,mFAYM,IAAAgB,EAAAb,KAChBc,MAAM,qCAEDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAY,IACNE,EAAUF,EAASG,KAAnBD,MAERL,EAAKO,SAAS,CAAEZ,YAAaU,2CAI5BG,GAAO,IAAAC,EACQD,EAAME,OAAtBC,EADQF,EACRE,KAAMC,EADEH,EACFG,MACdzB,KAAKoB,SAALtB,OAAA4B,EAAA,EAAA5B,CAAA,GAAiB0B,EAAOC,yCAGfJ,GACTA,EAAMM,iBACN,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,SAAW/B,KAAKI,MAAMI,YAAYwB,QAC9DC,EAAgBjC,KAAKI,MAAMI,YAAYoB,GAAWM,IACxDlC,KAAKoB,SAAS,CAAEb,UAAW0B,qCAI3B,OACI1C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,YAAYC,SAAUpC,KAAKY,cACvCrB,EAAAC,EAAAC,cAAA,SACI4C,KAAK,OACLb,KAAK,UACLc,YAAY,cACZb,MAAOzB,KAAKI,MAAMC,QAClBkC,SAAUvC,KAAKS,eAGnBlB,EAAAC,EAAAC,cAAA,SACI4C,KAAK,OACLb,KAAK,aACLc,YAAY,iBACZb,MAAOzB,KAAKI,MAAMoC,WAClBD,SAAUvC,KAAKS,eAGnBlB,EAAAC,EAAAC,cAAA,2BAGJF,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,QACX5C,EAAAC,EAAAC,cAAA,OAAKC,IAAKM,KAAKI,MAAMG,UAAWZ,IAAI,KACpCJ,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,OAAOnC,KAAKI,MAAMC,SAChCd,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,UAAUnC,KAAKI,MAAME,qBA9D3BmC,aCabC,MAXf,WACI,OACInD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAACmD,EAAD,QCLZC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.14683612.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\r\n                alt=\"trollface\"\r\n            />\r\n            <p>Meme Generator</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\nimport React, { Component } from 'react';\r\n\r\nclass MemeGenerator extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const { memes } = response.data\r\n                //console.log(memes[0])\r\n                this.setState({ allMemeImgs: memes })\r\n            })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const randomNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const randomMemeImg = this.state.allMemeImgs[randomNum].url\r\n        this.setState({ randomImg: randomMemeImg })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"topText\"\r\n                        placeholder=\"Top text...\"\r\n                        value={this.state.topText}\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"bottomText\"\r\n                        placeholder=\"Bottom text...\"\r\n                        value={this.state.bottomtext}\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                    <button>Generate</button>\r\n                </form>\r\n\r\n                <div className=\"meme\">\r\n                    <img src={this.state.randomImg} alt=\"\" />\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator;\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport MemeGenerator from \"./MemeGenerator\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <MemeGenerator />\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}